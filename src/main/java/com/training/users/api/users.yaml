openapi: 3.0.0
info:
  version: "1"
  title: User API
  description: ''
paths:
  /users:
    get:
      description: Returns a list of users
      responses:
        '200':
          description: Successfully returned a list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Users'
    post:
      description: Create a new User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'

      responses:
        '200':
          description: Successfully added a new user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
    delete:
      description: Delete a user
      responses:
        '200':
          description: User deleted
        '404':
          description: User not found
components:
  schemas:
    Users:
      type: object
      required:
        - userID
        - userName
        - email
        - status
      properties:
        userID:
          type: string
          pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
          example: 8a7b9cde-1b3c-4d5e-9f8a-7b6c5d4e3f42
        userName:
          type: string
          minimum: 5
          pattern: "^[a-zA-Z0-9_-]{3,16}$"
          example: Rachel
        email:
          type: string
          pattern: "^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$"
          example: liam.ford@gmail.com
        status:
          type: string
          enum:
            - Active
            - Inactive
          example: Active
    UserRequest:
      description: User Request Body
      type: object
      example:
        userID: 8a7b9cde-1b3c-4d5e-9f8a-7b6c5d4e3f42
        userName: Rachel
        email: liam.ford@gmail.com
      required:
        - userID
        - userName
        - email
        - password
      properties:
        userID:
          type: string
          pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
          example: 8a7b9cde-1b3c-4d5e-9f8a-7b6c5d4e3f42
        userName:
          type: string
          minimum: 5
          pattern: "^[a-zA-Z0-9_-]{3,16}$"
          example: Rachel
        email:
          type: string
          pattern: "^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$"
          example: liam.ford@gmail.com
        password:
          type: string
          minimum: 6
          pattern: "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$"
          example: testing

    UserResponse:
      description: User Response Body
      type: object
      example:
        userID: 8a7b9cde-1b3c-4d5e-9f8a-7b6c5d4e3f42
        status: Active
        createdAt: 2022-08-17T00:00:00.000Z
      properties:
        userID:
          type: string
          pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
          example: 8a7b9cde-1b3c-4d5e-9f8a-7b6c5d4e3f42
        status:
          type: string
          enum:
            - Active
            - Inactive
          example: Active
        createdAt:
          type: string
          format: date-time
          example: 2022-08-17T00:00:00.000Z
servers:
  - description: SwaggerHub API Auto Mocking
    url: 'https://virtserver.swaggerhub.com/rachelmcclelland6/UserAPI/1'